package {{ base_package }}.{{ flat module }}.impl.{{ flat first_page }}.di

import {{ base_package }}.{{ flat module }}.impl.{{ flat first_page }}.screen.{{ pascal first_page }}ScreenViewModel
import {{ base_package }}.navigation.NavigationManagerModule
import {{ base_package }}.navigation.SubfeatureScoped
import {{ base_package }}.navigation.NavigationProvider
import {{ base_package }}.navigation.SubfeatureSubcomponentFactory
import dagger.Subcomponent

/**
 * The component for the screen inside the feature. It is providing the screen-wide dependencies.
 * If the sub-feature needs dependencies other than the ones provided in the root component, it
 * should be added inside the [{{ pascal first_page }}Subcomponent.Factory] as parameter.
 */
@SubfeatureScoped
@Subcomponent(
    modules = [
        {{ pascal first_page }}Module::class,
        NavigationManagerModule::class,
    ]
)
interface {{ pascal first_page }}Subcomponent : NavigationProvider {
    val viewModelFactory: {{ pascal first_page }}ScreenViewModel.Factory

    @Subcomponent.Factory
    interface Factory : SubfeatureSubcomponentFactory<{{ pascal first_page }}Subcomponent>
}